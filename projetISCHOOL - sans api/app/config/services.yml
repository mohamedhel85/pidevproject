# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'
    app.command.image_setup:
        class: AppBundle\Command\SetupImagesCommand
        tags:
            - {name: console.command }
    # file mover service for AppBundle
    app.service.file_mover:
        class: AppBundle\Service\fileMover
        arguments:
            - "@Filesystem"

    app.service.file_mover_path:
        class: AppBundle\Service\fileMoverPath
        arguments:
            - "%kernel.project_dir%/web/img/"
    app.doctrine.file_upload_listener:
        class: AppBundle\Event\Listener\FileUploaderListener
        arguments:
            - "@app.service.file_mover"
            - "@app.service.file_mover_path"
        tags:
            - { name: doctrine.event_listener , event: prePersist }
            - { name: doctrine.event_listener , event: preUpdate }

    app.form.type.custom_file_type:
        class: AppBundle\Form\Type\customFileType
        arguments:
            - "@logger"
        tags:
            - { name: file.type , alias: custom_file_type }